{"ast":null,"code":"import _classCallCheck from \"/Users/sarah/src/eidoo-doggo/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sarah/src/eidoo-doggo/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sarah/src/eidoo-doggo/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sarah/src/eidoo-doggo/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sarah/src/eidoo-doggo/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sarah/src/eidoo-doggo/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      dogs: [],\n      selectedBreed: null,\n      greeting: 'Select a dog breed.',\n      isLoading: true\n    }; //state\n\n    console.log(\"Hi from state\");\n    return _this;\n  } //constructor\n  //beginning old thing\n  //   getDogs() {\n  //     axios\n  //     // Dog CEO API call for breed list\n  //     .get(\"https://dog.ceo/api/breeds/list/all\")\n  //     .then(response =>\n  //       response.data.message(dog => ({\n  //         breedlist: `${dog.message}`\n  //       }))\n  //     )\n  //     .then(dogs => {\n  //           this.setState({\n  //             dogs,\n  //             isLoading: false,\n  //           });\n  //         })\n  //     .catch(error => this.setState({ error, isLoading: false }));\n  //     console.log(\"In getDogs\");\n  //   } //getDogs\n  //\n  // componentDidMount() {\n  //   this.getDogs();\n  //   console.log(\"In componentDidMount\");\n  // }\n  //end old thing\n  // beginning new thing\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"https://dog.ceo/api/breeds/list/all\").then(function (res) {\n        var dogs = res.data;\n\n        _this2.setState({\n          dogs: dogs\n        });\n      });\n    } //end new thing\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"They Are All Good Dogs\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.selectedBreed), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.greeting)) // Insert doggo image in <p>\n      ;\n    } //render\n\n  }]);\n\n  return App;\n}(Component); // Component\n\n\nvar dogBreeds = {\n  \"status\": \"success\",\n  \"message\": {\n    \"affenpinscher\": [],\n    \"african\": [],\n    \"airedale\": [],\n    \"akita\": [],\n    \"appenzeller\": [],\n    \"basenji\": [],\n    \"beagle\": [],\n    \"bluetick\": [],\n    \"borzoi\": [],\n    \"bouvier\": [],\n    \"boxer\": [],\n    \"brabancon\": [],\n    \"briard\": [],\n    \"bulldog\": [\"boston\", \"french\"],\n    \"bullterrier\": [\"staffordshire\"],\n    \"cairn\": [],\n    \"cattledog\": [\"australian\"],\n    \"chihuahua\": [],\n    \"chow\": [],\n    \"clumber\": [],\n    \"cockapoo\": [],\n    \"collie\": [\"border\"],\n    \"coonhound\": [],\n    \"corgi\": [\"cardigan\"],\n    \"cotondetulear\": [],\n    \"dachshund\": [],\n    \"dalmatian\": [],\n    \"dane\": [\"great\"],\n    \"deerhound\": [\"scottish\"],\n    \"dhole\": [],\n    \"dingo\": [],\n    \"doberman\": [],\n    \"elkhound\": [\"norwegian\"],\n    \"entlebucher\": [],\n    \"eskimo\": [],\n    \"germanshepherd\": [],\n    \"greyhound\": [\"italian\"],\n    \"groenendael\": [],\n    \"hound\": [\"afghan\", \"basset\", \"blood\", \"english\", \"ibizan\", \"walker\"],\n    \"husky\": [],\n    \"keeshond\": [],\n    \"kelpie\": [],\n    \"komondor\": [],\n    \"kuvasz\": [],\n    \"labrador\": [],\n    \"leonberg\": [],\n    \"lhasa\": [],\n    \"malamute\": [],\n    \"malinois\": [],\n    \"maltese\": [],\n    \"mastiff\": [\"bull\", \"tibetan\"],\n    \"mexicanhairless\": [],\n    \"mix\": [],\n    \"mountain\": [\"bernese\", \"swiss\"],\n    \"newfoundland\": [],\n    \"otterhound\": [],\n    \"papillon\": [],\n    \"pekinese\": [],\n    \"pembroke\": [],\n    \"pinscher\": [\"miniature\"],\n    \"pointer\": [\"german\"],\n    \"pomeranian\": [],\n    \"poodle\": [\"miniature\", \"standard\", \"toy\"],\n    \"pug\": [],\n    \"puggle\": [],\n    \"pyrenees\": [],\n    \"redbone\": [],\n    \"retriever\": [\"chesapeake\", \"curly\", \"flatcoated\", \"golden\"],\n    \"ridgeback\": [\"rhodesian\"],\n    \"rottweiler\": [],\n    \"saluki\": [],\n    \"samoyed\": [],\n    \"schipperke\": [],\n    \"schnauzer\": [\"giant\", \"miniature\"],\n    \"setter\": [\"english\", \"gordon\", \"irish\"],\n    \"sheepdog\": [\"english\", \"shetland\"],\n    \"shiba\": [],\n    \"shihtzu\": [],\n    \"spaniel\": [\"blenheim\", \"brittany\", \"cocker\", \"irish\", \"japanese\", \"sussex\", \"welsh\"],\n    \"springer\": [\"english\"],\n    \"stbernard\": [],\n    \"terrier\": [\"american\", \"australian\", \"bedlington\", \"border\", \"dandie\", \"fox\", \"irish\", \"kerryblue\", \"lakeland\", \"norfolk\", \"norwich\", \"patterdale\", \"russell\", \"scottish\", \"sealyham\", \"silky\", \"tibetan\", \"toy\", \"westhighland\", \"wheaten\", \"yorkshire\"],\n    \"vizsla\": [],\n    \"weimaraner\": [],\n    \"whippet\": [],\n    \"wolfhound\": [\"irish\"]\n  }\n};\nvar breeds = dogBreeds.message;\nconsole.log(breeds.keys());\nexport default App;","map":{"version":3,"sources":["/Users/sarah/src/eidoo-doggo/my-app/src/App.js"],"names":["React","Component","axios","App","props","state","dogs","selectedBreed","greeting","isLoading","console","log","get","then","res","data","setState","dogBreeds","breeds","message","keys"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,aAAa,EAAE,IAFJ;AAGXC,MAAAA,QAAQ,EAAE,qBAHC;AAIXC,MAAAA,SAAS,EAAE;AAJA,KAAb,CAHiB,CAQd;;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AATiB;AAUlB,G,CAAC;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;wCAEoB;AAAA;;AAChBT,MAAAA,KAAK,CAACU,GAAN,wCACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,YAAMR,IAAI,GAAGQ,GAAG,CAACC,IAAjB;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEV,UAAAA,IAAI,EAAJA;AAAF,SAAd;AACD,OAJH;AAKD,K,CACH;;;;6BACW;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKD,KAAL,CAAWE,aADb,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKF,KAAL,CAAWG,QADb,CAPF,CADF,CAYE;AAZF;AAcD,K,CAAC;;;;;EA/DcP,S,GAgEhB;;;AAEF,IAAIgB,SAAS,GACb;AACI,YAAU,SADd;AAEI,aAAW;AACP,qBAAiB,EADV;AAEP,eAAW,EAFJ;AAGP,gBAAY,EAHL;AAIP,aAAS,EAJF;AAKP,mBAAe,EALR;AAMP,eAAW,EANJ;AAOP,cAAU,EAPH;AAQP,gBAAY,EARL;AASP,cAAU,EATH;AAUP,eAAW,EAVJ;AAWP,aAAS,EAXF;AAYP,iBAAa,EAZN;AAaP,cAAU,EAbH;AAcP,eAAW,CACP,QADO,EAEP,QAFO,CAdJ;AAkBP,mBAAe,CACX,eADW,CAlBR;AAqBP,aAAS,EArBF;AAsBP,iBAAa,CACT,YADS,CAtBN;AAyBP,iBAAa,EAzBN;AA0BP,YAAQ,EA1BD;AA2BP,eAAW,EA3BJ;AA4BP,gBAAY,EA5BL;AA6BP,cAAU,CACN,QADM,CA7BH;AAgCP,iBAAa,EAhCN;AAiCP,aAAS,CACL,UADK,CAjCF;AAoCP,qBAAiB,EApCV;AAqCP,iBAAa,EArCN;AAsCP,iBAAa,EAtCN;AAuCP,YAAQ,CACJ,OADI,CAvCD;AA0CP,iBAAa,CACT,UADS,CA1CN;AA6CP,aAAS,EA7CF;AA8CP,aAAS,EA9CF;AA+CP,gBAAY,EA/CL;AAgDP,gBAAY,CACR,WADQ,CAhDL;AAmDP,mBAAe,EAnDR;AAoDP,cAAU,EApDH;AAqDP,sBAAkB,EArDX;AAsDP,iBAAa,CACT,SADS,CAtDN;AAyDP,mBAAe,EAzDR;AA0DP,aAAS,CACL,QADK,EAEL,QAFK,EAGL,OAHK,EAIL,SAJK,EAKL,QALK,EAML,QANK,CA1DF;AAkEP,aAAS,EAlEF;AAmEP,gBAAY,EAnEL;AAoEP,cAAU,EApEH;AAqEP,gBAAY,EArEL;AAsEP,cAAU,EAtEH;AAuEP,gBAAY,EAvEL;AAwEP,gBAAY,EAxEL;AAyEP,aAAS,EAzEF;AA0EP,gBAAY,EA1EL;AA2EP,gBAAY,EA3EL;AA4EP,eAAW,EA5EJ;AA6EP,eAAW,CACP,MADO,EAEP,SAFO,CA7EJ;AAiFP,uBAAmB,EAjFZ;AAkFP,WAAO,EAlFA;AAmFP,gBAAY,CACR,SADQ,EAER,OAFQ,CAnFL;AAuFP,oBAAgB,EAvFT;AAwFP,kBAAc,EAxFP;AAyFP,gBAAY,EAzFL;AA0FP,gBAAY,EA1FL;AA2FP,gBAAY,EA3FL;AA4FP,gBAAY,CACR,WADQ,CA5FL;AA+FP,eAAW,CACP,QADO,CA/FJ;AAkGP,kBAAc,EAlGP;AAmGP,cAAU,CACN,WADM,EAEN,UAFM,EAGN,KAHM,CAnGH;AAwGP,WAAO,EAxGA;AAyGP,cAAU,EAzGH;AA0GP,gBAAY,EA1GL;AA2GP,eAAW,EA3GJ;AA4GP,iBAAa,CACT,YADS,EAET,OAFS,EAGT,YAHS,EAIT,QAJS,CA5GN;AAkHP,iBAAa,CACT,WADS,CAlHN;AAqHP,kBAAc,EArHP;AAsHP,cAAU,EAtHH;AAuHP,eAAW,EAvHJ;AAwHP,kBAAc,EAxHP;AAyHP,iBAAa,CACT,OADS,EAET,WAFS,CAzHN;AA6HP,cAAU,CACN,SADM,EAEN,QAFM,EAGN,OAHM,CA7HH;AAkIP,gBAAY,CACR,SADQ,EAER,UAFQ,CAlIL;AAsIP,aAAS,EAtIF;AAuIP,eAAW,EAvIJ;AAwIP,eAAW,CACP,UADO,EAEP,UAFO,EAGP,QAHO,EAIP,OAJO,EAKP,UALO,EAMP,QANO,EAOP,OAPO,CAxIJ;AAiJP,gBAAY,CACR,SADQ,CAjJL;AAoJP,iBAAa,EApJN;AAqJP,eAAW,CACP,UADO,EAEP,YAFO,EAGP,YAHO,EAIP,QAJO,EAKP,QALO,EAMP,KANO,EAOP,OAPO,EAQP,WARO,EASP,UATO,EAUP,SAVO,EAWP,SAXO,EAYP,YAZO,EAaP,SAbO,EAcP,UAdO,EAeP,UAfO,EAgBP,OAhBO,EAiBP,SAjBO,EAkBP,KAlBO,EAmBP,cAnBO,EAoBP,SApBO,EAqBP,WArBO,CArJJ;AA4KP,cAAU,EA5KH;AA6KP,kBAAc,EA7KP;AA8KP,eAAW,EA9KJ;AA+KP,iBAAa,CACT,OADS;AA/KN;AAFf,CADA;AAwLA,IAAIC,MAAM,GAAGD,SAAS,CAACE,OAAvB;AACAT,OAAO,CAACC,GAAR,CAAYO,MAAM,CAACE,IAAP,EAAZ;AAIA,eAAejB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dogs: [],\n      selectedBreed: null,\n      greeting: 'Select a dog breed.',\n      isLoading: true\n    }; //state\n    console.log(\"Hi from state\");\n  } //constructor\n\n//beginning old thing\n//   getDogs() {\n//     axios\n//     // Dog CEO API call for breed list\n//     .get(\"https://dog.ceo/api/breeds/list/all\")\n//     .then(response =>\n//       response.data.message(dog => ({\n//         breedlist: `${dog.message}`\n//       }))\n//     )\n//     .then(dogs => {\n//           this.setState({\n//             dogs,\n//             isLoading: false,\n//           });\n//         })\n//     .catch(error => this.setState({ error, isLoading: false }));\n//     console.log(\"In getDogs\");\n//   } //getDogs\n//\n// componentDidMount() {\n//   this.getDogs();\n//   console.log(\"In componentDidMount\");\n// }\n//end old thing\n// beginning new thing\n\ncomponentDidMount() {\n    axios.get(`https://dog.ceo/api/breeds/list/all`)\n      .then(res => {\n        const dogs = res.data;\n        this.setState({ dogs });\n      })\n  }\n//end new thing\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>They Are All Good Dogs</h1>\n        </header>\n        <p>\n        { this.state.selectedBreed }\n        </p>\n        <p>\n        { this.state.greeting }\n        </p>\n      </div>\n      // Insert doggo image in <p>\n    );\n  } //render\n} // Component\n\nlet dogBreeds =\n{\n    \"status\": \"success\",\n    \"message\": {\n        \"affenpinscher\": [],\n        \"african\": [],\n        \"airedale\": [],\n        \"akita\": [],\n        \"appenzeller\": [],\n        \"basenji\": [],\n        \"beagle\": [],\n        \"bluetick\": [],\n        \"borzoi\": [],\n        \"bouvier\": [],\n        \"boxer\": [],\n        \"brabancon\": [],\n        \"briard\": [],\n        \"bulldog\": [\n            \"boston\",\n            \"french\"\n        ],\n        \"bullterrier\": [\n            \"staffordshire\"\n        ],\n        \"cairn\": [],\n        \"cattledog\": [\n            \"australian\"\n        ],\n        \"chihuahua\": [],\n        \"chow\": [],\n        \"clumber\": [],\n        \"cockapoo\": [],\n        \"collie\": [\n            \"border\"\n        ],\n        \"coonhound\": [],\n        \"corgi\": [\n            \"cardigan\"\n        ],\n        \"cotondetulear\": [],\n        \"dachshund\": [],\n        \"dalmatian\": [],\n        \"dane\": [\n            \"great\"\n        ],\n        \"deerhound\": [\n            \"scottish\"\n        ],\n        \"dhole\": [],\n        \"dingo\": [],\n        \"doberman\": [],\n        \"elkhound\": [\n            \"norwegian\"\n        ],\n        \"entlebucher\": [],\n        \"eskimo\": [],\n        \"germanshepherd\": [],\n        \"greyhound\": [\n            \"italian\"\n        ],\n        \"groenendael\": [],\n        \"hound\": [\n            \"afghan\",\n            \"basset\",\n            \"blood\",\n            \"english\",\n            \"ibizan\",\n            \"walker\"\n        ],\n        \"husky\": [],\n        \"keeshond\": [],\n        \"kelpie\": [],\n        \"komondor\": [],\n        \"kuvasz\": [],\n        \"labrador\": [],\n        \"leonberg\": [],\n        \"lhasa\": [],\n        \"malamute\": [],\n        \"malinois\": [],\n        \"maltese\": [],\n        \"mastiff\": [\n            \"bull\",\n            \"tibetan\"\n        ],\n        \"mexicanhairless\": [],\n        \"mix\": [],\n        \"mountain\": [\n            \"bernese\",\n            \"swiss\"\n        ],\n        \"newfoundland\": [],\n        \"otterhound\": [],\n        \"papillon\": [],\n        \"pekinese\": [],\n        \"pembroke\": [],\n        \"pinscher\": [\n            \"miniature\"\n        ],\n        \"pointer\": [\n            \"german\"\n        ],\n        \"pomeranian\": [],\n        \"poodle\": [\n            \"miniature\",\n            \"standard\",\n            \"toy\"\n        ],\n        \"pug\": [],\n        \"puggle\": [],\n        \"pyrenees\": [],\n        \"redbone\": [],\n        \"retriever\": [\n            \"chesapeake\",\n            \"curly\",\n            \"flatcoated\",\n            \"golden\"\n        ],\n        \"ridgeback\": [\n            \"rhodesian\"\n        ],\n        \"rottweiler\": [],\n        \"saluki\": [],\n        \"samoyed\": [],\n        \"schipperke\": [],\n        \"schnauzer\": [\n            \"giant\",\n            \"miniature\"\n        ],\n        \"setter\": [\n            \"english\",\n            \"gordon\",\n            \"irish\"\n        ],\n        \"sheepdog\": [\n            \"english\",\n            \"shetland\"\n        ],\n        \"shiba\": [],\n        \"shihtzu\": [],\n        \"spaniel\": [\n            \"blenheim\",\n            \"brittany\",\n            \"cocker\",\n            \"irish\",\n            \"japanese\",\n            \"sussex\",\n            \"welsh\"\n        ],\n        \"springer\": [\n            \"english\"\n        ],\n        \"stbernard\": [],\n        \"terrier\": [\n            \"american\",\n            \"australian\",\n            \"bedlington\",\n            \"border\",\n            \"dandie\",\n            \"fox\",\n            \"irish\",\n            \"kerryblue\",\n            \"lakeland\",\n            \"norfolk\",\n            \"norwich\",\n            \"patterdale\",\n            \"russell\",\n            \"scottish\",\n            \"sealyham\",\n            \"silky\",\n            \"tibetan\",\n            \"toy\",\n            \"westhighland\",\n            \"wheaten\",\n            \"yorkshire\"\n        ],\n        \"vizsla\": [],\n        \"weimaraner\": [],\n        \"whippet\": [],\n        \"wolfhound\": [\n            \"irish\"\n        ]\n    }\n}\n\nlet breeds = dogBreeds.message;\nconsole.log(breeds.keys());\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}